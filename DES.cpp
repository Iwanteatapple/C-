/* 
 * File:   main.cpp
 * Author: chenglewis
 *
 * Created on 2015年4月7日, 下午 9:19
 */

#include <cstdlib>
#include <iostream>
using namespace std;

int IP[64]={ 58,50,42,34,26,18,10, 2, 
             60,52,44,36,28,20,12, 4, 
             62,54,46,38,30,22,14, 6, 
             64,56,48,40,32,24,16, 8, 
             57,49,41,33,25,17, 9, 1, 
             59,51,43,35,27,19,11, 3, 
             61,53,45,37,29,21,13, 5, 
             63,55,47,39,31,23,15, 7 }; 

int FIP[64]={ 40, 8,48,16,56,24,64,32, 
             39, 7,47,15,55,23,63,31, 
             38, 6,46,14,54,22,62,30, 
             37, 5,45,13,53,21,61,29, 
             36, 4,44,12,52,20,60,28, 
             35, 3,43,11,51,19,59,27, 
             34, 2,42,10,50,18,58,26, 
             33, 1,41, 9,49,17,57,25 }; 

int pc1[56]={ 57,49,41,33,25,17, 9, 
               1,58,50,42,34,26,18, 
              10, 2,59,51,43,35,27, 
              19,11, 3,60,52,44,36, 
              63,55,47,39,31,23,15, 
               7,62,54,46,38,30,22, 
              14, 6,61,53,45,37,29, 
              21,13, 5,28,20,12, 4 }; 

int pc2[48]={ 14,17,11,24, 1, 5, 3,28, 
              15, 6,21,10,23,19,12, 4, 
              26, 8,16, 7,27,20,13, 2, 
              41,52,31,37,47,55,30,40, 
              51,45,33,48,44,49,39,56, 
              34,53,46,42,50,36,29,32 }; 

int E[48]={ 32, 1, 2, 3, 4, 5, 
             4, 5, 6, 7, 8, 9, 
             8, 9,10,11,12,13, 
            12,13,14,15,16,17, 
            16,17,18,19,20,21, 
            20,21,22,23,24,25, 
            24,25,26,27,28,29, 
            28,29,30,31,32, 1 }; 

int P[32]={ 16, 7,20,21,29,12,28,17, 
             1,15,23,26, 5,18,31,10, 
             2, 8,24,14,32,27, 3, 9, 
             19,13,30, 6,22,11, 4,25 }; 

int Sbox[8][4][16]={ {//s1
                     {14, 4,13, 1, 2,15,11, 8, 3,10, 6,12, 5, 9, 0, 7}, 
                     { 0,15, 7, 4,14, 2,13, 1,10, 6,12,11, 9, 5, 3, 8}, 
                     { 4, 1,12, 8,13, 6, 2,11,15,12, 9, 7, 3,10, 5, 0}, 
                     {15,12, 8, 2, 4, 9, 1, 7, 5,11, 3,14,10, 0, 6,13} }, 

                     {//s2 
                     {15, 1, 8,14, 6,11, 3, 4, 9, 7, 2,13,12, 0, 5,10}, 
                     { 3,13, 4, 7,15, 2, 8,14,12, 0, 1,10, 6, 9,11, 5}, 
                     { 0,14, 7,11,10, 4,13, 1, 5, 8,12, 6, 9, 3, 2,15}, 
                     {13, 8,10, 1, 3,15, 4, 2,11, 6, 7,12, 0, 5,14, 9} }, 

                     {//s3 
                     {10, 0, 9,14, 6, 3,15, 5, 1,13,12, 7,11, 4, 2, 8}, 
                     {13, 7, 0, 9, 3, 4, 6,10, 2, 8, 5,14,12,11,15, 1}, 
                     {13, 6, 4, 9, 8,15, 3, 0,11, 1, 2,12, 5,10,14, 7}, 
                     { 1,10,13, 0, 6, 9, 8, 7, 4,15,14, 3,11, 5, 2,12} }, 

                     {//s4 
                     { 7,13,14, 3, 0, 6, 9,10, 1, 2, 8, 5,11,12, 4,15}, 
                     {13, 8,11, 5, 6,15, 0, 3, 4, 7, 2,12, 1,10,14, 9}, 
                     {10, 6, 9, 0,12,11, 7,13,15, 1, 3,14, 5, 2, 8, 4}, 
                     { 3,15, 0, 6,10, 1,13, 8, 9, 4, 5,11,12, 7, 2,14} }, 

                     {//s5 
                     { 2,12, 4, 1, 7,10,11, 6, 8, 5, 3,15,13, 0,14, 9}, 
                     {14,11, 2,12, 4, 7,13, 1, 5, 0,15,10, 3, 9, 8, 6}, 
                     { 4, 2, 1,11,10,13, 7, 8,15, 9,12, 5, 6, 3, 0,14}, 
                     {11, 8,12, 7, 1,14, 2,13, 6,15, 0, 9,10, 4, 5, 3} }, 

                     {//s6 
                     {12, 1,10,15, 9, 2, 6, 8, 0,13, 3, 4,14, 7, 5,11}, 
                     {10,15, 4, 2, 7,12, 9, 5, 6, 1,13,14, 0,11, 3, 8}, 
                     { 9,14,15, 5, 2, 8,12, 3, 7, 0, 4,10, 1,13,11, 6}, 
                     { 4, 3, 2,12, 9, 5,15,10,11,14, 1, 7, 6, 0, 8,13} }, 

                     {//s7 
                     { 4,11, 2,14,15, 0, 8,13, 3,12, 9, 7, 5,10, 6, 1}, 
                     {13, 0,11, 7, 4, 9, 1,10,14, 3, 5,12, 2,15, 8, 6}, 
                     { 1, 4,11,13,12, 3, 7,14,10,15, 6, 8, 0, 5, 9, 2}, 
                     { 6,11,13, 8, 1, 4,10, 7, 9, 5, 0,15,14, 2, 3,12} }, 

                     {//s8 
                     {13, 2, 8, 4, 6,15,11, 1,10, 9, 3,14, 5, 0,12, 7}, 
                     { 1,15,13, 8,10, 3, 7, 4,12, 5, 6,11, 0,14, 9, 2}, 
                     { 7,11, 4, 1, 9,12,14, 2, 0, 6,10,13,15, 3, 5, 8}, 
                     { 2, 1,14, 7, 4,10, 8,13,15,12, 9, 0, 3, 5, 6,11} } };
int Ep[48];
int sBox[32];
int t;

long long int ID;
int IDD[8];
int Okey[8];

int nKey=0;
int key[16][48];

int IDB[64];
int RID[32];
int change[64];

int PC1C[56];
int RPC[28],LPC[28];

//******************************************************


void Ef()
{
//    Ep[0]=IDB[63];
//    Ep[47]=IDB[32];
//    for(int I=1; I<47; I++)
//    {
//        if(I%6==0)
//        {
//            Ep[I]=IDB[32+(I/6)*4-1];
//        }
//        else if(I%6==5)
//        {
//            Ep[I]=IDB[32+((I/6)+1)*4];
//        }
//        else
//        {
//            Ep[I]= IDB[32+I-((I/6)*2)-1];
//        }
//    }
//    
//    cout<<"Ep1 :"<<endl;
//    for(int I=0;I<48;I++)
//    {
//        cout<<Ep[I];
//    }
//    cout<<endl;
    
    cout<<"RID :"<<endl;
    for(int I=0;I<32;I++)
    {
        cout<<IDB[32+I];
    }
    cout<<endl;
    
    
    for(int I=0; I<48; I++)
    {
        Ep[I]=IDB[32+E[I]-1];
    }
    
    cout<<"E :"<<endl;
    for(int I=0;I<48;I++)
    {
        cout<<Ep[I];
    }
    cout<<endl;
    
}




void Pf()
{
    for(int I=0;I<32;I++)
    {
        RID[I]=sBox[P[I]-1];
    }
    cout<<"P SBox :"<<endl;
    for(int I=0;I<32;I++)
    {
        cout<<RID[I];
    }
    cout<<endl;
    
}



//******************************************************

void XOR48()
{
    for(int I=0;I<48;I++)
    {
        if(Ep[I]==key[t][I])
        {
            Ep[I]=1;
        }
        else
        {
            Ep[I]=0;
        }
    }
    
    cout<<"XOR Key :"<<endl;
    for(int I=0;I<48;I++)
    {
        cout<<Ep[I];
    }
    cout<<endl;
    
}

void change48Ef32()
{
    for(int I=0;I<8;I++)
    {
        int a=0,b=0;
        for(int J=0;J<6;J++)
        {
            if(J=0)
            {
                a=2*Ep[I*6+J];
            }
            if(J=5)
            {
                a+=Ep[I*6+J];
            }
            else
            {
                b=b*2+Ep[I*6+J];
            }
        }
        
        int k=Sbox[I][b][a];
        
        for(int J=3;J>=0;J--)
        {
            sBox[I*4+J]=k%2;
            k/=2;
        }
        
        
    }
    
    cout<<"after SBox :"<<endl;
    for(int I=0;I<32;I++)
    {
        cout<<sBox[I];
    }
    cout<<endl;
    
}


void XOR32()
{
    cout<<"LID :"<<endl;
    for(int I=0;I<32;I++)
    {
        cout<<IDB[I];
    }
    cout<<endl;
    cout<<"RID :"<<endl;
    for(int I=0;I<32;I++)
    {
        cout<<RID[I];
    }
    cout<<endl;
    
    for(int I=0;I<32;I++)
    {
        if(RID[I]==IDB[I])
        {
            RID[I]=1;
        }
        else
        {
            RID[I]=0;
        }
        
        IDB[I]=IDB[32+I];
        
    }
    
    for(int I=0;I<32;I++)
    {
        IDB[32+I]=RID[I];
    }
    
    cout<<"XOR RL:"<<endl;
    for(int I=0;I<32;I++)
    {
        cout<<RID[I];
    }
    cout<<endl;
    
}

//******************************************************

void PC1f()
{
    for(int I=0;I<56;I++)
    {
        PC1C[I]=Okey[pc1[I]-1];
    }
}

void changePC()
{
    int k;
    for(int I=0;I<28;I++)
    {
        RPC[I]=PC1C[I+28];
        LPC[I]=PC1C[I];
    }
    
    k=RPC[0];
    
    for(int I=0;I<27;I++)
    {
        RPC[I]=RPC[I+1];
    }
    
    RPC[27]=k;
    
    
    k=LPC[0];
    
    for(int I=0;I<27;I++)
    {
        LPC[I]=LPC[I+1];
    }
    
    LPC[27]=k;
    
    for(int I=0;I<27;I++)
    {
        PC1C[I]=LPC[I];
        PC1C[I+28]=RPC[I];
    }
    
}


void PC2f()
{
    for(int I=0;I<48;I++)
    {
        key[nKey][I]=PC1C[pc2[I]-1];
    }
    
    
    cout<<"key "<< nKey+1 <<endl;
    
    for(int I=0;I<48;I++)
    {
        cout<<key[nKey][I];
    }
    
    cout<<endl;
    
    nKey++;
    
    
}

//******************************************************

void IPf()
{
    for(int I=0;I<=63;I++)
    {
        change[I]=IDB[IP[I]-1];
    }
    
    for(int I=0;I<=63;I++)
    {
        IDB[I]=change[I];
    }
    
    cout<<"IP :"<<endl;
    for(int I=0;I<=63;I++)
    {
        cout<<IDB[I];
    }
    cout<<endl;
    
}

void FIPf()
{
    for(int I=0;I<=63;I++)
    {
        change[I]=IDB[FIP[I]-1];
    }
    
    for(int I=0;I<=63;I++)
    {
        IDB[I]=change[I];
    }
    
    cout<<"FIP :"<<endl;
    for(int I=0;I<=63;I++)
    {
        cout<<IDB[I];
    }
    cout<<endl;
}

//******************************************************

int main() {
    t=0;
    cin>>ID;
    for(int I=7;I>=0;I--)
    {
        IDD[I]=ID%10;
        ID/=10;
    }
    
    for(int I=0;I<8;I++)
    {
        for(int J=7;J>=0;J--)
        {
            IDB[J+(I*8)]=IDD[I]%2;
            IDD[I]/=2;
            
        }
    }
    
    for(int I=0;I<64;I++)
    {
        Okey[I]=IDB[I];
    }
    
    
    cout<<"明文"<<endl;
    for(int I=0;I<=63;I++)
    {
        cout<<IDB[I];
    }
    cout<<endl;
    
    
    IPf();
    PC1f();
    cout<<endl;
    
    for(int Z=0;Z<16;Z++)
    {
       changePC();
       PC2f();
       
       Ef();
       XOR48();
       change48Ef32();
       Pf();
       
       XOR32();
       
       
       
       cout<<"加密"<<Z+1<<endl;
       for(int I=0;I<=63;I++)
        {
            cout<<IDB[I];
        }
        cout<<endl;
        cout<<endl;
       t++;
    }
    
    for(int I=0;I<32;I++)
    {
        change[I]=IDB[32+I];
        change[32+I]=IDB[I];
    }
    
    for(int I=0;I<64;I++)
    {
        IDB[I]=change[I];
    }
    
    
    cout<<"Change RL"<<endl;
    for(int I=0;I<64;I++)
    {
        cout<<IDB[I];
    }
    cout<<endl;
    cout<<endl;
    
    FIPf();
    
    
    cout<<"密文"<<endl;
    for(int I=0;I<64;I++)
    {
        cout<<IDB[I];
    }
    
    
    return 0;
}

